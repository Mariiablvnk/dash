{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = function (a0) {\n  return {\n    size: a0,\n    page: 1\n  };\n};\nfunction PaginationComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 3);\n    i0.ɵɵtext(2, \" First \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"queryParams\", i0.ɵɵpureFunction1(2, _c0, ctx_r0.size))(\"routerLink\", ctx_r0.routerLinkBase);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    size: a0,\n    page: a1\n  };\n};\nfunction PaginationComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const page_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"active\", page_r3 === ctx_r1.currentPage);\n    i0.ɵɵproperty(\"queryParams\", i0.ɵɵpureFunction2(5, _c1, ctx_r1.size, page_r3))(\"routerLink\", ctx_r1.routerLinkBase);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", page_r3, \" \");\n  }\n}\nfunction PaginationComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 3);\n    i0.ɵɵtext(2, \" Last \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"queryParams\", i0.ɵɵpureFunction2(2, _c1, ctx_r2.size, ctx_r2.totalPages))(\"routerLink\", ctx_r2.routerLinkBase);\n  }\n}\nexport class PaginationComponent {\n  constructor() {\n    this.currentPage = 1;\n    this.totalPages = 1;\n    this.size = 24;\n    this.windowSize = 2;\n    this.showFirstLastButton = true;\n    this.routerLinkBase = [];\n  }\n  getNavigablePages() {\n    const pages = [];\n    const left = Math.max(1, this.currentPage - this.windowSize);\n    const right = Math.min(this.totalPages, this.currentPage + this.windowSize);\n    for (let i = left; i <= right; i++) {\n      pages.push(i);\n    }\n    return pages;\n  }\n}\nPaginationComponent.ɵfac = function PaginationComponent_Factory(t) {\n  return new (t || PaginationComponent)();\n};\nPaginationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaginationComponent,\n  selectors: [[\"app-pagination\"]],\n  inputs: {\n    currentPage: \"currentPage\",\n    totalPages: \"totalPages\",\n    size: \"size\",\n    windowSize: \"windowSize\",\n    showFirstLastButton: \"showFirstLastButton\",\n    routerLinkBase: \"routerLinkBase\"\n  },\n  decls: 11,\n  vars: 13,\n  consts: [[\"aria-label\", \"Page navigation\"], [1, \"navlinks\"], [4, \"ngIf\"], [\"queryParamsHandling\", \"merge\", 1, \"navlink\", 3, \"queryParams\", \"routerLink\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function PaginationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ul\", 1);\n      i0.ɵɵtemplate(2, PaginationComponent_li_2_Template, 3, 4, \"li\", 2);\n      i0.ɵɵelementStart(3, \"li\")(4, \"a\", 3);\n      i0.ɵɵtext(5, \" Prev \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, PaginationComponent_li_6_Template, 3, 8, \"li\", 4);\n      i0.ɵɵelementStart(7, \"li\")(8, \"a\", 3);\n      i0.ɵɵtext(9, \" Next \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, PaginationComponent_li_10_Template, 3, 5, \"li\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButton);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"queryParams\", i0.ɵɵpureFunction2(7, _c1, ctx.size, ctx.currentPage - 1))(\"routerLink\", ctx.routerLinkBase);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getNavigablePages());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"queryParams\", i0.ɵɵpureFunction2(10, _c1, ctx.size, ctx.currentPage + 1))(\"routerLink\", ctx.routerLinkBase);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButton);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.RouterLink],\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;IAEQA,0BAAgC;IAOxBA,uBACJ;IAAAA,iBAAI;;;;IANAA,eAAuC;IAAvCA,qEAAuC;;;;;;;;;;;IAkB/CA,0BAA6C;IAQrCA,YACJ;IAAAA,iBAAI;;;;;IAJAA,eAAqC;IAArCA,wDAAqC;IAHrCA,8EAA0C;IAM1CA,eACJ;IADIA,wCACJ;;;;;IAYJA,0BAAgC;IAOxBA,sBACJ;IAAAA,iBAAI;;;;IANAA,eAAgD;IAAhDA,wFAAgD;;;ACpChE,OAAM,MAAOC,mBAAmB;EALhCC;IAMa,gBAAW,GAAG,CAAC;IACf,eAAU,GAAG,CAAC;IACd,SAAI,GAAG,EAAE;IACT,eAAU,GAAG,CAAC;IACd,wBAAmB,GAAG,IAAI;IAC1B,mBAAc,GAAa,EAAE;;EAEtCC,iBAAiB;IACb,MAAMC,KAAK,GAAG,EAAE;IAChB,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,UAAU,CAAC;IAC5D,MAAMC,KAAK,GAAGJ,IAAI,CAACK,GAAG,CAAC,IAAI,CAACC,UAAU,EAAE,IAAI,CAACJ,WAAW,GAAG,IAAI,CAACC,UAAU,CAAC;IAC3E,KAAK,IAAII,CAAC,GAAGR,IAAI,EAAEQ,CAAC,IAAIH,KAAK,EAAEG,CAAC,EAAE,EAAE;MAChCT,KAAK,CAACU,IAAI,CAACD,CAAC,CAAC;;IAEjB,OAAOT,KAAK;EAChB;;AAhBSH,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAc;EAAAC;IAAAR;IAAAI;IAAAK;IAAAR;IAAAS;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDThCvB,8BAAkC;MAE1BA,kEASK;MACLA,0BAAI;MAOKA,sBACL;MAAAA,iBAAI;MAERA,kEAUK;MACLA,0BAAI;MAOIA,sBACJ;MAAAA,iBAAI;MAERA,oEASK;MACTA,iBAAK;;;MAnDIA,eAAyB;MAAzBA,8CAAyB;MAYtBA,eAAqD;MAArDA,uFAAqD;MAQxCA,eAAsB;MAAtBA,iDAAsB;MAanCA,eAAqD;MAArDA,wFAAqD;MAQxDA,eAAyB;MAAzBA,8CAAyB","names":["i0","PaginationComponent","constructor","getNavigablePages","pages","left","Math","max","currentPage","windowSize","right","min","totalPages","i","push","selectors","inputs","size","showFirstLastButton","routerLinkBase","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\38093\\Desktop\\dash\\dashboard\\src\\app\\pagination\\pagination.component.html","C:\\Users\\38093\\Desktop\\dash\\dashboard\\src\\app\\pagination\\pagination.component.ts"],"sourcesContent":["<nav aria-label=\"Page navigation\">\n    <ul class=\"navlinks\">\n        <li *ngIf=\"showFirstLastButton\">\n            <a\n                [queryParams]=\"{ size: size, page: 1 }\"\n                [routerLink]=\"routerLinkBase\"\n                queryParamsHandling=\"merge\"\n                class=\"navlink\"\n            >\n                First\n            </a>\n        </li>\n        <li>\n            <a\n                [queryParams]=\"{ size: size, page: currentPage - 1 }\"\n                [routerLink]=\"routerLinkBase\"\n                queryParamsHandling=\"merge\"\n                class=\"navlink\"\n            >\n                 Prev\n            </a>\n        </li>\n        <li *ngFor=\"let page of getNavigablePages()\">\n            <a\n                [queryParams]=\"{ size: size, page: page }\"\n                [routerLink]=\"routerLinkBase\"\n                queryParamsHandling=\"merge\"\n                [class.active]=\"page === currentPage\"\n                class=\"navlink\"\n            >\n                {{ page }}\n            </a>\n        </li>\n        <li>\n            <a\n                [queryParams]=\"{ size: size, page: currentPage + 1 }\"\n                [routerLink]=\"routerLinkBase\"\n                queryParamsHandling=\"merge\"\n                class=\"navlink\"\n            >\n                Next \n            </a>\n        </li>\n        <li *ngIf=\"showFirstLastButton\">\n            <a\n                [queryParams]=\"{ size: size, page: totalPages }\"\n                [routerLink]=\"routerLinkBase\"\n                queryParamsHandling=\"merge\"\n                class=\"navlink\"\n            >\n                Last\n            </a>\n        </li>\n    </ul>\n</nav>\n","import { CommonModule } from '@angular/common'\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core'\nimport { RouterModule } from '@angular/router'\n\n@Component({\n    selector: 'app-pagination',\n    templateUrl: './pagination.component.html',\n    styleUrls: ['./pagination.component.scss'],\n})\nexport class PaginationComponent {\n    @Input() currentPage = 1\n    @Input() totalPages = 1\n    @Input() size = 24\n    @Input() windowSize = 2\n    @Input() showFirstLastButton = true\n    @Input() routerLinkBase: string[] = []\n\n    getNavigablePages(): number[] {\n        const pages = []\n        const left = Math.max(1, this.currentPage - this.windowSize)\n        const right = Math.min(this.totalPages, this.currentPage + this.windowSize)\n        for (let i = left; i <= right; i++) {\n            pages.push(i)\n        }\n        return pages\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}